from flask import Flask
import hashlib
import requests
import os
import json

app = Flask(__name__)

TELEGRAM_TOKEN = "8104929376:AAHTdEhMLDtJlujISK7k5qdDaJreKqBskm4"
TELEGRAM_CHAT_ID = "1707995106"

SCHOOL_URLS = {
    "18 –°–£": "https://18sou.net/—Å–≤–æ–±–æ–¥–Ω–∏-–º–µ—Å—Ç–∞/",
    "32 –°–£–ò–ß–ï": "https://school32.com/–ø—Ä–∏–µ–º/—Å–≤–æ–±–æ–¥–Ω–∏-–º–µ—Å—Ç–∞/",
    "–°–ú–ì": "https://smg.bg/razni/2024/03/11/8622/svobodni-mesta-za-priem-na-uchenitsi-v-10-klas-za-–≤—Ç–æ—Ä–∏-—Å—Ä–æ–∫-–Ω–∞-—É—á–µ–±–Ω–∞—Ç–∞-2023-2024-–≥o–¥–∏–Ω–∞/",
    "–ù–ü–ú–ì": "https://npmg.org/–ø—Ä–∏–µ–º-–≤-—Å—Ç–∞—Ä—à–∏-–∫–ª–∞—Å–æ–≤–µ/",
    "1 –ê–ï–ì": "https://www.fels-sofia.org/bg/svobodni-mesta-236",
    "2 –ê–ï–ì": "https://2els.com/–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è-–∑–∞-—Å–≤–æ–±–æ–¥–Ω–∏-–º–µ—Å—Ç–∞",
    "90 –°–£": "https://sou90.org/priem/",
    "22 –°–ï–£": "https://22seu.org/—Å–≤–æ–±–æ–¥–Ω–∏-–º–µ—Å—Ç–∞-–∑–∞-—É—á–µ–Ω–∏—Ü–∏/"
}

HASHES_FILE = "site_hashes.json"

def send_telegram(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    requests.post(url, data={
        "chat_id": TELEGRAM_CHAT_ID,
        "text": message,
        "parse_mode": "HTML"
    })

def check_sites():
    if os.path.exists(HASHES_FILE):
        with open(HASHES_FILE, "r") as f:
            old_hashes = json.load(f)
    else:
        old_hashes = {}

    updates = []
    new_hashes = {}

    for school, url in SCHOOL_URLS.items():
        try:
            res = requests.get(url, timeout=15)
            res.raise_for_status()
            hash = hashlib.md5(res.text.encode()).hexdigest()
            new_hashes[school] = hash
            if old_hashes.get(school) != hash:
                updates.append(f"üîî <b>{school}</b>: {url}")
        except Exception as e:
            updates.append(f"‚ö†Ô∏è {school} error: {e}")

    with open(HASHES_FILE, "w") as f:
        json.dump(new_hashes, f, ensure_ascii=False, indent=2)

    if updates:
        send_telegram("üìù <b>–ù–æ–≤–∏ —Å—ä–æ–±—â–µ–Ω–∏—è:</b>\n\n" + "\n\n".join(updates))

@app.route('/')
def index():
    return "üü¢ Running!"

@app.route('/run')
def run_check():
    try:
        check_sites()
        return "‚úÖ Check completed."
    except Exception as e:
        # Log error somewhere (e.g., to a file or just print)
        print(f"Error during check: {e}")
        return "‚ùå Error during check."

from datetime import datetime

@app.route('/dashboard')
def dashboard():
    if os.path.exists(HASHES_FILE):
        with open(HASHES_FILE, "r") as f:
            current_hashes = json.load(f)
    else:
        current_hashes = {}

    html = "<h1>üìä School Monitoring Dashboard</h1><ul>"

    for school, url in SCHOOL_URLS.items():
        hash_val = current_hashes.get(school, "‚Äî")
        html += f"<li><strong>{school}</strong>: <a href='{url}' target='_blank'>–ª–∏–Ω–∫</a> ‚Äî –•–µ—à: <code>{hash_val}</code></li>"

    html += f"</ul><p>‚è±Ô∏è –ü–æ—Å–ª–µ–¥–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>"
    return html
